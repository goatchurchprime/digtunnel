{ lib
, copyDesktopItems
, fetchFromGitHub
, makeDesktopItem
, stdenv
, alsaLib
, gcc-unwrapped
, git
, godot-export-templates
, godot-headless
, libGLU
, libX11
, libXcursor
, libXext
, libXfixes
, libXi
, libXinerama
, libXrandr
, libXrender
, libglvnd
, libpulseaudio
, zlib
}:

stdenv.mkDerivation rec {
  pname = "tunnelvr";
  version = "v0.6.0";

  src = fetchGit {
    url = "https://github.com/goatchurchprime/tunnelvr.git";
    rev = "6bbd23bf9f719dc7cdfd9de08addb62adbd52a62";
    ref = "refs/heads/master";
  };

  nativeBuildInputs = [
    copyDesktopItems
    godot-headless
  ];

  buildInputs = [
    alsaLib
    gcc-unwrapped.lib
    git
    libGLU
    libX11
    libXcursor
    libXext
    libXfixes
    libXi
    libXinerama
    libXrandr
    libXrender
    libglvnd
    libpulseaudio
    zlib
  ];

  desktopItems = [
    (makeDesktopItem {
      name = "tunnelvr";
      exec = "tunnelvr";
      icon = "tunnelvr";
      desktopName = "tunnelvr";
      comment = "An interactive Git learning game!";
      genericName = "An interactive Git learning game!";
      categories = "Game;";
    })
  ];

  buildPhase = ''
    runHook preBuild
    # Cannot create file '/homeless-shelter/.config/godot/projects/...'
    export HOME=$TMPDIR
    # Link the export-templates to the expected location. The --export commands
    # expects the template-file at .../templates/3.2.3.stable/linux_x11_64_release
    # with 3.2.3 being the version of godot.
    mkdir -p $HOME/.local/share/godot
    ln -s ${godot-export-templates}/share/godot/templates $HOME/.local/share/godot
    mkdir -p $out/share/tunnelvr
    godot-headless --export "Linux/X11" $out/share/tunnelvr/tunnelvr
    runHook postBuild
  '';

  dontInstall = true;
  dontFixup = true;
  dontStrip = true;

#  installPhase = ''
#    runHook preInstall
#    mkdir -p $out/bin
#    mv $out/share/tunnelvr/tunnelvr $out/bin
#    # Patch binaries.
#    interpreter=$(cat $NIX_CC/nix-support/dynamic-linker)
#    patchelf \
#      --set-interpreter $interpreter \
#      --set-rpath ${lib.makeLibraryPath buildInputs} \
#      $out/share/tunnelvr/tunnelvr
#    mkdir -p $out/share/pixmaps
#    runHook postInstall
#  '';

  meta = with lib; {
    homepage = "https://ohmygit.org/";
    description = "An interactive Git learning game";
    license = with licenses; [ blueOak100 ];
    platforms   = [ "x86_64-linux" ];
    maintainers = with maintainers; [ jojosch ];
  };
}
